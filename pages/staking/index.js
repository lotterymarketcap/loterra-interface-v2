import Head from 'next/head'
import styles from '../../styles/pages/Staking.module.scss'

import SmallBackground from '../../components/SmallBackground'
import useStore from '../../store/store'


import { Pie, Line } from 'react-chartjs-2';


export default function Staking() {

  const lineOptions = {
    
    scales:{
      xAxis:{
        beginAtZero:true,
        display:false
      },
      yAxis:{
        beginAtZero:true,
        display:false 
      },
      },
    plugins : {
  
      legend: {
        display: false
    },
    title: {
        display: false
    }
    },
    
}
  

  const lineData = canvas => {
    const ctx = canvas.getContext('2d');  
    let gradientGreen = ctx.createLinearGradient(500, 0, 100, 0);
    gradientGreen.addColorStop(0, '#4DF6A4');
    gradientGreen.addColorStop(1, '#1BC472'); 

    return {
      labels: [75,25,10,21,35,40,77],
   
    datasets: [
      {      
        data: [75,25,10,21,35,40,77],
        fill:true,
        backgroundColor:'rgba(32, 255, 147, 0.2)',
        borderColor: [
          gradientGreen,   
        ],
        pointBackgroundColor: '#FFFFFF',
        lineTension: .4,
        borderWidth: 5,
      },
    ],
  
  }
  };

  const data = canvas => {
    const ctx = canvas.getContext('2d');
 
    let gradientBlack = ctx.createLinearGradient(500, 0, 100, 0);
    gradientBlack.addColorStop(0, '#3B2E5D');
    gradientBlack.addColorStop(1, '#271A49');

    let gradientGreen = ctx.createLinearGradient(500, 0, 100, 0);
    gradientGreen.addColorStop(0, '#4DF6A4');
    gradientGreen.addColorStop(1, '#1BC472'); 

    return {
      labels: ['Red', 'Blue'],
    datasets: [
      {
        label: '# of Votes',
        data: [75,25],
        backgroundColor: [
          gradientGreen,
          gradientBlack,          
        ],
        borderColor: [
          gradientGreen,
          gradientBlack,       
        ],
        borderWidth: 1,
      },
    ],
  }
  };


  const bears = useStore(state => state.bears)
  const bearName = useStore(state => state.bearName)

  const increasePopulation = useStore(state => state.increasePopulation)
  const changeName = useStore(state => state.changeName)

  return (
 <>
      <Head>
        <title>Loterra - Staking</title>
        <meta name="viewport" content="initial-scale=1.0, width=device-width" />
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <SmallBackground/>

         <div className={styles.container}>
          <div className="w4">
          <Pie data={data} />
          <button onClick={increasePopulation}>{bears}</button>
          <input onChange={(e) => changeName(e)} value={bearName}/>
          </div>
          <div className="w8">
            <div className="lota-card">
                <div className={styles.card_header}>
                  <h1>Staking</h1>
                  <h2>Unstake or stake your LOTA in order to get rewards and voting weight</h2>
                </div>
                <div className={styles.card_form}>
                  <input type="text" placeholder="Amount"/>
                    <div className="w4">
                      <i>MAX</i>                      
                      <button className="plain">Stake</button>
                      <span>Available: 100LOTA</span>
                    </div>
                    <div className="w4">
                      <i>MAX</i>                      
                      <button className="plain">Unstake</button>
                      <span>Available: 100LOTA</span>
                    </div>
                    <div className="w4">      
                      <i></i>                                     
                      <button className="plain">Claim unstake</button>
                      <span>Available: 100LOTA</span>
                    </div>
                </div>
            </div>
          </div>
          <div className="w12">
            <div className="lota-card mt-3">
              <div className="w6">
                <div className={styles.chart}>
                  <Line data={lineData} options={lineOptions}/>
                </div>
              </div>
              <div className="w6 center">
                  <div className={styles.card_header}>
                  <h1>Staking rewards</h1>
                  <h2>Claim what is yours, or perhaps another nice sentence</h2>
                  </div>
                  <button className={"pink "+styles.claim_btn}>Claim rewards</button>
              </div>
            </div>
          </div>
        </div>
   
    </>
  )
}
